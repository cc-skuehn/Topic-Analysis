y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
theme_bw() + ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
fillvec=(c("gold",rep("grey",2),rep("lightbrown",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
theme_bw() + ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
fillvec=(c("gold",rep("grey",2),rep("bronze",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
theme_bw() + ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=20,face="bold"),
axis.text.y = element_text(colour="grey20",size=20,face="bold"),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
theme_bw() + ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
fillvec=(c("gold",rep("grey",2),rep("brown",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=20,face="bold"),
axis.text.y = element_text(colour="grey20",size=20,face="bold"),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
theme_bw() + ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=20,face="bold"),
axis.text.y = element_text(colour="grey20",size=20,face="bold"),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=20,face="bold"),
axis.text.y = element_text(colour="grey20",size=20,face="bold"),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
fillvec=(c("gold",rep("grey",2),rep("brown",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=20),
axis.text.y = element_text(colour="grey20",size=20,face="bold"),
axis.title.x = element_text(colour="grey20",size=20))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=10),
axis.text.y = element_text(colour="grey20",size=10),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=15),
axis.text.y = element_text(colour="grey20",size=15),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
fillvec=(c("gold",rep("grey",2),rep("brown",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=15),
axis.text.y = element_text(colour="grey20",size=15),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel",size=15)
fillvec=(c("gold",rep("grey",2),rep("brown",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.y = element_text(colour="grey20",size=15),
axis.text.x = element_text(colour="grey20",size=15),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+1),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
fillvec=(c("gold",rep("grey",2),rep("brown",10)))
ggplot(test.pct, aes(x=Note, y=Anzahl)) + theme_bw()+ theme(axis.title.y = element_text(colour="grey20",size=20,face="bold"),
axis.text.x = element_text(colour="grey20",size=15),
axis.text.y = element_text(colour="grey20",size=15),
axis.title.x = element_text(colour="grey20",size=20,face="bold"))  +
geom_bar(stat="identity",fill=fillvec) +
geom_text(data=test.pct, aes(label=paste0(round(pct*100,1),"%"),
y=Anzahl-3),colour=c(rep("black",3),rep("white",10)), size=6) +
geom_text(data=test.pct, aes(label=round(Anzahl,0),
y=Anzahl+2),colour="blue" , size=6) +
annotate("text", label = paste("Insgesamt",sum(test$Anzahl), "Teilnehmer"), x = 10, y = 65, size = 8, colour = "darkgrey") +
ggtitle("WiSe 15/16 - Allgemeine und Biologische Psychologie - Geschätzter Notenspiegel")
52*5
76400/220
76400/(220*8)
1200/8
1000/8
76400*1.2
str(abc)
x1 = 1
x2= "1"
x1==x2
identical(all.equal(x1, x2), TRUE)
identical(x1, x2)
mat1 = matrix(data=c(1,3,3,3,3,1,3,3,3,3,1,3,3,3,3,1),nrow=4)
mat1
vec1 =3* c(37,41,43,49)
solve(mat1,vec1)
15+12+3
vec1
mat1 = matrix(data=c(3,1,1,1,1,3,1,1,1,1,3,1,1,1,1,3),nrow=4)
mat1
solve(mat1,vec1)
clear
mat1
vec1
solve(mat1,vec1)
(19+22+31)/3
require(sql.reader)
install.packages("sql.reader")
install.packages(rodbc)
install.packages('rodbc')
install.packages('RODBC')
require(RODBC)
library(RMySQL)
library(DBI)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog",user='sk',password = "test")
dbListTables(con)
dbListFields(con, "wp_users")
dbReadTable(con, "wp_users") -> blog_users
dbListFields(con, "wp_2_posts")
dbDisconnect(con)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog",user='sk',password = "test")
dbListTables(con)
dbListFields(con, "wp_users")
dbReadTable(con, "wp_users") -> blog_users
dbListFields(con, "wp_2_posts")
dbReadTable(con, "wp_2_posts") -> blog_posts
str(blog_posts)
length(blog_posts$post_content)
length(blog_posts$post_content[1])
nchar(blog_posts$post_content[1])
nchar(blog_posts$post_content[1234])
nchar(blog_posts$post_content[1235])
nchar(blog_posts[1235])
nchar(blog_posts[1235,])
nchar(blog_posts[4235,])
nchar(blog_posts[2235,])
nchar(blog_posts[235,])
blog_posts[235,]
blog_posts[2235,]
blog_posts[3235,]
table(nchar(blog_posts$post_content))
table(apply(blog_posts$post_content,nchar())
)
table(apply(blog_posts$post_content,nchar()))
nctr <- sapply(blog_posts,nchar)
dbDisconnect(con)
nctr <- sapply(blog_posts[1:100],nchar)
nctr <- sapply(blog_posts[1:100m,],nchar)
nctr <- sapply(blog_posts[1:100,],nchar)
nctr <- sapply(blog_posts[1,],nchar)
nctr <- sapply(blog_posts[1:2,],nchar)
nctr
nctr <- sapply(blog_posts[1:20,],nchar)
nctr
nctr <- sapply(blog_posts[1:10,],nchar)
nctr <- sapply(blog_posts[1:9,],nchar)
nctr <- sapply(blog_posts[1:8,],nchar)
nctr <- sapply(blog_posts[1:7,],nchar)
nctr <- sapply(blog_posts[1:6,],nchar)
nctr <- sapply(blog_posts[1:5,],nchar)
nctr <- sapply(blog_posts[1:4,],nchar)
blog_posts[5,]
dbDisconnect(con)
testdata <- sin(1:100*(3.145/100))
plot(testdata)
testdata <- sin(1:100*(6*3.145/100))
plot(testdata)
testdata <- sin(1:100*(6*3.145/100))+rnorm(100,sd=0.1)
plot(testdata)
test.stl = stl(testdata, s.window="periodic")
test.stl = stl(testdata)
testdata <- sin(1:1000*(20*3.145/100))+rnorm(1000,sd=0.1)
plot(testdata)
testdata <- sin(1:1000*(20*3.145/1000))+rnorm(1000,sd=0.1)
plot(testdata)
test.stl = stl(testdata)
nottem
test.stl = stl(nottem,s.window = "periodic")
plot(test.stl)
require(lof)
require('Rlof')
install.packages('Rlof')
require("Rlof")
lof(iris,k=5)
iris2<-iris[,1:4]
out.score1 <- lof(iris2,k=5)
plot(out.score)
plot(out.score1)
qplot(iris2[,1:2],color=out.score1>1.5)
require(ggplot2)
qplot(iris2[,1:2],color=out.score1>1.5)
qplot(iris2[,1:2],color=(out.score1>1.5))
qplot(iris2[,1],iris2[,2],color=(out.score1>1.5))
qplot(iris2[,1],iris2[,3],color=(out.score1>1.5))
qplot(iris2[,1],iris2[,4],color=(out.score1>1.5))
out.score1 <- lof(iris2[,1:2],k=5)
qplot(iris2[,1],iris2[,4],color=(out.score1>1.5))
qplot(iris2[,1],iris2[,2],color=(out.score1>1.5))
out.score1 <- lof(iris2[,1:2],k=4)
qplot(iris2[,1],iris2[,2],color=(out.score1>1.5))
out.score1 <- lof(iris2[,1:2],k=3)
qplot(iris2[,1],iris2[,2],color=(out.score1>1.5))
qplot(iris2[,1],iris2[,2],color=(out.score1>1.8))
qplot(iris2[,1],iris2[,2],color=(out.score1>1.9))
out.score1 <- lof(iris2[,1:2],k=8)
qplot(iris2[,1],iris2[,2],color=(out.score1>1.9))
qplot(iris2[,1],iris2[,2],color=(out.score1>1.5))
Outlier <- color=(out.score1>1.5)
Outlier <- out.score1>1.5
qplot(iris2[,1],iris2[,2],color=Outlier)
qplot(iris2[,1],iris2[,2],color=Outlier,size=Outlier)
qplot(iris2[,1],iris2[,2],color=Outlier,size=Outlier)+xlab("Variable 1")
qplot(iris2[,1],iris2[,2],color=Outlier,size=Outlier)+xlab("Variable 1")+ylab("Variable 2")
qplot(iris2[,1],iris2[,2],color=Outlier,size=Outlier)+xlab("Variable 1")+ylab("Variable 2")+ggtitle("Outlier/Anomaly Detection in R")
factorial(9)
factorial(8)
library(RMySQL)
library(DBI)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog", group = "my-db")
dbListTables(con)
dbDisconnect(con)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog",user='sk',password = "test")
dbListTables(con)
dbDisconnect(con)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog")
dbListTables(con)
dbDisconnect(con)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog", group = "my-db")
dbListTables(con)
dbListFields(con, "wp_users")
dbReadTable(con, "wp_users") -> blog_users
dbListFields(con, "wp_2_posts")
dbReadTable(con, "wp_2_posts") -> blog_posts
str(blog_posts)
nctr <- sapply(blog_posts[1:4,],nchar)
blog_posts[5,]
nchar(blog_posts[5,])
nchar(blog_posts[5,1])
nchar(blog_posts[5,2])
nchar(blog_posts[5,3])
nchar(blog_posts[5,4])
nchar(blog_posts[5,5])
Sys.getlocale()
rs <- dbGetQuery(con, 'set character set utf8')
dbReadTable(con, "wp_users") -> blog_users
dbListFields(con, "wp_2_posts")
dbReadTable(con, "wp_2_posts") -> blog_posts
str(blog_posts)
blog_posts[5,]
nchar(blog_posts[5,5])
nctr <- sapply(blog_posts[1:40,],nchar)
nctr
max(nctr)
table(blog_posts$post_category)
table(blog_posts$post_type)
blog_pppp <- blog_posts[blog_posts$post_type=="post",]
head(blog_pppp)
table(blog_pppp$post_status)
blog_pppp2 <- blog_pppp[blog_pppp$post_status=="publish",]
head(blog_pppp2)
head(blog_pppp2[,c("post_author","post_title")])
(blog_pppp2[1:100,c("post_author","post_title")])
names(blog_pppp2)
table(blog_pppp2$post_mime_type)
table(blog_pppp2$post_type)
table(blog_pppp2$post_category)
table(blog_pppp2$guid)
blog_german <- blog_pppp2[,grep(blog_pppp2$gui,".de/?")]
blog_german <- blog_pppp2[,grep(".de/?",blog_pppp2$gui)]
blog_german <- blog_pppp2[grep(".de/?",blog_pppp2$gui),]
blog_german <- blog_pppp2[grep(".de/?",blog_pppp2$guid),]
str(blog_german)
blog_english <- blog_pppp2[grep(".de/en/",blog_pppp2$guid),]
str(blog_english)
table(blog_english$author)
table(blog_english$post_author)
table(blog_german$post_author)
str(blog_german)
str(blog_english)
blog_english$post_title
blog_posts$post_title[grep("[Mm]achinery",blog_posts$post_title)]
blog_pppp$post_title[grep("[Mm]achinery",blog_posts$post_title)]
blog_pppp2$post_title[grep("[Mm]achinery",blog_posts$post_title)]
blog_german$post_title[grep("[Mm]achinery",blog_posts$post_title)]
table(blog_posts$status)
table(blog_posts$post_status)
blog_posts[grep("[Mm]achinery",blog_posts$post_title),c("post_title","post_status")]
blog_posts[grep("[Mm]achinery",blog_posts$post_title),c("post_title","post_status","post_type")]
blog_pppp <- blog_posts[blog_posts$post_type=="post",]
blog_pppp[grep("[Mm]achinery",blog_pppp$post_title),c("post_title","post_status","post_type")]
blog_pppp2[grep("[Mm]achinery",blog_pppp2$post_title),c("post_title","post_status","post_type")]
blog_pppp2[grep("[Mm]achinery",blog_pppp2$post_title),c("post_title","post_status","post_type","guid")]
dbListTables(con)
dbListFields(con, "wp_2_postmeta")
dbReadTable(con, "wp_2_postmeta") -> blog_meta
head(blog_meta)
head(blog_meta,20)
dbListTables(con)
dbListFields(con, "wp_2_posts")
str(blog_posts)
head(blog_posts$post_excerpt)
head(blog_posts$post_excerpt,10)
(blog_posts$post_excerpt[1:20]
)
head(blog_posts$post_content_filtered,10)
head(blog_posts$post_content_filtered,100)
table(blog_posts$post_content_filtered)
length(unique(blog_posts$post_content_filtered))
(unique(blog_posts$post_content_filtered))
head(guid)
head(blog_posts$guid)
tail(blog_posts$guid)
tail(blog_posts$guid,20)
blog_posts$guid[2034:20100])
blog_posts$guid[2034:2100])
blog_posts$guid[2034:2100]
blog_english
blog_english$guid
table(blog_posts$post_type)
dbListFields(con, "wp_2_posts")
dbListTables(con)
dbReadTable(con, "wp_2_links") -> blog_links
str(blog_links)
table(blog_links$link_category)
blog_links
str(blog_meta)
dbListTables(con)
dbReadTable(con, "wp_2_options") -> blog_options
str(blog_options)
dbReadTable(con, "wp_2_tr") -> blog_tr
dbReadTable(con, "wp_2_term_relationships") -> blog_tr
str(blog_tr)
dbReadTable(con, "wp_2_term") -> blog_term
dbReadTable(con, "wp_2_terms") -> blog_term
str(blog_term)
table(blog_term$term_group)
table(blog_term$name)
table(blog_term$slug)
dbListTables(con)
table(blog_posts$post_status)
install.packages(c('pbdZMQ', 'repr', 'devtools'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
data(iris)
pairs(iris)
install.packages("psych")
library(psych)
pairs.panels(iris)
pairs(iris)
library(psych)
pairs.default(iris)
pairs.panel(iris)
pairs.panels(iris)
install.packages("Gally")
install.packages("GGally")
library(GGally)
ggpairs(iris)
ggpairs(iris,diag=list(continuous="density",discrete="bar"),axisLabels = "show")
ggpairs(iris,diag=list(continuous="density",discrete="hist"),axisLabels = "show")
ggpairs(iris,diag=list(continuous="smooth",discrete="bar"),axisLabels = "show")
ggpairs(iris,diag=list(continuous="point",discrete="bar"),axisLabels = "show")
ggpairs(iris)
ggpairs(iris,diag=list(continuous="point",discrete="bar"),axisLabels = "show")
ggpairs(iris,diag=list(continuous="density",discrete="bar"),axisLabels = "show")
examples(ggpairs)
libraryggpairs(iris3)
ggpairs(iris3)
data(iris3)
ggpairs(iris3)
str(iris3)
str(iris)
head(iris3)
examples(ggpairs)
example(ggpairs)
ggpair(iris,mapping=aes(color=Species))
ggpairs(iris,mapping=aes(color=Species))
library(ggplot2)
ggpairs(iris)
ggpairs(iris,mapping = aes(color=Species))
ggcorr(iris)
ggcorr(iris,method = c("all","spearman"))
ggcorr(iris,method = c("pairwise","spearman"))
ggcorr(iris,method = c("pairwise","pearson"))
ggcorr(iris,method = c("pairwise","kendall"))
ggcorr(iris,method = c("all.obs","spearman"))
ggcorr(iris,method = c("everything","spearman")) # spearman's rank correlation
ggcorr(iris,method = c("pairwise","pearson")) # default, same output as ggcorr(iris)
ggcorr(iris,method = c("pairwise","kendall")) # kendall's tau
ggcorr(iris,method = c("all.obs","spearman")) # spearman's rank correlation
nba = read.csv("http://datasets.flowingdata.com/ppg2008.csv")
ggcorr(nba,method = c("pairwise","pearson")) # default, same output as ggcorr(iris)
ggcorr(nba,method = c("pairwise","kendall")) # kendall's tau
ggcorr(nba,method = c("all.obs","spearman")) # spearman's rank correlation
ggcorr(nby,nbreaks=5)
ggcorr(nba,nbreaks=5)
ggcorr(nba,nbreaks=5,geom=circle)
ggcorr(nba,nbreaks=5,geom="circle")
ggcorr(nba,nbreaks=5,geom="triangle")
ggcorr(nba,nbreaks=5,geom="square")
ggcorr(nba,nbreaks=5,geom="dot")
ggcorr(nba,nbreaks=5,geom="dots")
ggcorr(nba,nbreaks=5,geom="circle")
ggcorr(nba, geom="blank")
ggcorr(nba, geom="tile")
ggcorr(nba, geom=text)
ggcorr(nba, geom="text")
ggcorr(nba, geom="text",nbreaks=3)
ggpairs(iris,diag=list(continuous="density",discrete="bar"),axisLabels = "show")
ggpairs(iris,mapping = aes(color=Species))
ggpairs(iris[iris$Species!="setosa",],mapping = aes(color=Species))
ggpairs(iris[iris$Species!="setosa" & iris$Petal.Width<=1.9 & iris$Petal.Width>=1.3 ,],mapping = aes(color=Species))
ggpairs(iris[iris$Species!="setosa" & iris$Petal.Width<=1.75 & iris$Petal.Length>=5.25 ,],mapping = aes(color=Species))
ggpairs(iris[iris$Species!="setosa" & iris$Petal.Width<=1.9 & iris$Petal.Width>=1.3 ,],mapping = aes(color=Species))
ggpairs(iris[iris$Species!="setosa" & iris$Petal.Width<=1.75 & iris$Petal.Length<=5.25 ,],mapping = aes(color=Species))
ggpairs(iris[iris$Species!="setosa" & iris$Petal.Width<=1.75  & iris$Petal.Width>=1.4 & iris$Petal.Length<=5.25 ,],mapping = aes(color=Species))
ggpairs(iris,mapping = aes(color=Species))
setwd("~/Documents/Programming_R/Demo_Weblogs")
167332371/2^10
167332371/2^20
setwd("~/Documents/Programming_R/TopicAnalysis/Code")
library(RMySQL)
library(DBI)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog", group = "my-db")
dbListTables(con)
dbDisconnect(con)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog", group = "my-db")
dbListTables(con)
dbDisconnect(con)
con <- dbConnect(RMySQL::MySQL(), host="localhost",dbname="ccblog", group = "my-db")
dbListTables(con)
14*8
94/160
94/8
install.packages(("tourr"))
library(tourr)
grand_tour(iris[,2:4])
grand_tour(iris[,2:4],d=3)
grand_tour(d=3)
animate(data = iris[,2:4])
str(iris)
animate(data = iris[,1:4])
animate(data = iris[,1:4],aps = 10)
animate(data = iris[,1:4],aps = 1)
animate(data = iris[,1:4],aps = 1,fps=5)
animate(data = iris[,1:4],aps = 1,fps=5,color=iris[,5])
animate_pcp(data = iris[,1:4],aps = 1,fps=5)
animate(data = iris[,1:2])
animate_pcp(data = iris[,1:2])
animate_pcp(data = iris[,1:3])
animate_pcp(data = iris[,1:3],fps=5)
animate_pcp(data = iris[,1:3],fps=2)
animate_pcp(data = iris[,1:3],fps=5)
animate_pcp(data = iris[,1:3],aps = 1,fps=5)
animate_pcp(data = iris[,1:3])
animate_pcp(data = iris[,1:3],fps=1)
animate_pcp(data = iris[,1:3],aps=10,fps=1)
